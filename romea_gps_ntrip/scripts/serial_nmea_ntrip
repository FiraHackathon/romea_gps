#!/usr/bin/env python3
import rclpy
import serial

from romea_gps_ntrip.ntrip_node import NtripNode

TIMEOUT = 10  # seconds


class SerialNmeaNtrip(NtripNode):

    def __init__(self):
        super(SerialNmeaNtrip, self).__init__()
        self.node.declare_parameter('serial_port', '/dev/ttyACM0')
        self.node.declare_parameter('serial_baudrate', 115200)

        gps_serial_file = self.node.get_parameter('serial_port').get_parameter_value().string_value
        gps_baudrate = self.node.get_parameter('serial_baudrate').get_parameter_value().integer_value

        try:
            self.gps = serial.Serial(port=gps_serial_file, baudrate=gps_baudrate, timeout=TIMEOUT)
        except IOError as e:
            raise RuntimeError(f"Failed to open GNSS serial port: {e}") from e

    def send_rtcm_data(self, buffer):
        self.gps.write(buffer)

    def recv_nmea_data(self):
        return self.gps.readline().strip()


def main(args=None):
    rclpy.init(args=args)
    nmea_ntrip = SerialNmeaNtrip()

    try:
        nmea_ntrip.start_ntrip()
        nmea_ntrip.run_nmea_reader()
    except RuntimeError as e:
        nmea_ntrip.node.get_logger().error(e)


if __name__ == "__main__":
    main()
